plugins {
    id 'java'
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'net.minecrell.plugin-yml.bukkit' version '0.3.0'
    id 'com.palantir.git-version' version '0.12.3'
    id 'org.checkerframework' version '0.5.9'
    id 'com.github.sherter.google-java-format' version '0.9'
}

// Gets the git commit hash of the latest commit, used for version string
ext.projectVersion = '1.0'
def gitHash = versionDetails().gitHash

group = 'net.draycia'
description = 'CarbonChat'
version = project.property('projectVersion') + '-' + gitHash

repositories {
    mavenLocal()
    mavenCentral()

    maven {url = 'https://maven.enginehub.org/repo/'}
    maven {url = 'https://repo.maven.apache.org/maven2'}
    maven {url = 'https://papermc.io/repo/repository/maven-public/'}
    maven {url = 'https://oss.sonatype.org/content/groups/public/'}
    maven {url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'}
    maven {url = 'https://jitpack.io'}
    maven {url = 'https://dl.bintray.com/ichbinjoe/public/'}
    maven {url = 'https://repo.codemc.org/repository/maven-public/'}
    maven {url = 'https://repo.minebench.de/'}
    maven {url = "https://repo.aikar.co/content/groups/aikar/"}
    maven {url = 'https://raw.githubusercontent.com/JorelAli/CommandAPI/mvn-repo/'}
}

dependencies {
    // Components
    compile 'net.kyori:adventure-api:4.0.0-SNAPSHOT'
    compile 'net.kyori:adventure-nbt:4.0.0-SNAPSHOT'
    compile 'net.kyori:adventure-platform-bukkit:4.0.0-SNAPSHOT'
    compile 'net.kyori:adventure-text-minimessage:3.0.0-SNAPSHOT'
    compile 'de.themoep:minedown-adventure:1.6.1-SNAPSHOT'

    // Databases
    compile 'co.aikar:idb-bukkit:1.0.0-SNAPSHOT'
    compile 'com.zaxxer:HikariCP:2.4.1'

    // Messaging
    compile 'io.github.leonardosnt:bungeechannelapi:1.0.0-SNAPSHOT'
    compile 'io.lettuce:lettuce-core:6.0.0.M1'

    // Commands
    compile "dev.jorel:commandapi-shade:4.1"

    // Plugins
    compileOnly('com.gmail.nossr50.mcMMO:mcMMO:2.1.143') {
        exclude group: 'org.jetbrains', module: 'annotations'
    }
    compileOnly 'com.github.TownyAdvanced:Towny:0.96.2.0'
    compileOnly('com.sk89q.worldguard:worldguard-bukkit:7.0.4-SNAPSHOT') {
        exclude group: 'org.spigotmc', module: 'spigot-api' // Honestly?
    }
    compileOnly 'me.clip:placeholderapi:2.10.9'
    compileOnly 'com.github.TownyAdvanced:Towny:0.96.1.11'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'com.vexsoftware:nuvotifier-universal:2.6.0'
    compileOnly 'net.luckperms:api:5.1'

    // Server
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.2-R0.1-SNAPSHOT'
}

// Generates plugin.yml automatically
bukkit {
    name = project.description
    version = project.version
    main = 'net.draycia.carbon.CarbonChat'
    apiVersion = '1.13'
    author = 'Draycia'
    depend = ['PlaceholderAPI', 'Vault']
    softDepend = ['LuckPerms', 'Towny', 'mcMMO', 'WorldGuard']
    loadBefore = ["Essentials"]
    permissions {
        'carbonchat.channels.global.see' {
            setDefault("TRUE")
        }

        'carbonchat.channels.global.use' {
            setDefault("TRUE")
        }
    }
}

sourceCompatibility = '1.8'

// Set output directory and encoding
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Jar) {
    getDestinationDirectory().set(file("$rootDir/build"))
}

// Automatically shadowJar when building
tasks.build.dependsOn tasks.shadowJar

// Output a single jar
shadowJar {
    minimize()
    archiveFileName.set(project.description + "-" + project.property('projectVersion') + ".jar")
}

jar {
    archiveFileName.set(project.description + "-" + project.property('projectVersion') + ".jar")
}

// Automatically relocate all shaded dependencies
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "net.draycia.carbon.libs" // Default value is "shadow"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

// Cleanup custom output directory on clean task
clean.doFirst {
    delete "$rootDir/build/bundled"
}